pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'temperature_app'
        REPO_URL = 'https://github.com/OksanaBabychevska/panda-py'
        CONTAINER_NAME = 'temperature_app' 
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: 'main']], 
                    userRemoteConfigs: [[url: REPO_URL]])
            }
        }

        stage('Build') {
            steps {
                script {
                    // List the contents of the workspace (for debugging)
                    if (isUnix()) {
                        sh 'ls -l'  // Linux command
                    } else {
                        bat 'dir'  // Windows command
                    }

                    // Build the Docker image with the tag 'temperature_app'
                    if (isUnix()) {
                        sh "docker build -t ${DOCKER_IMAGE} ."  // Linux command
                    } else {
                        bat "docker build -t ${DOCKER_IMAGE} ."  // Windows command
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        if (isUnix()) {
                               sh 'docker-compose up -d'
                            sh "docker exec ${DOCKER_IMAGE} python /app/test_app.py"
                            } else {
                                bat 'docker-compose up -d'
                                bat "docker exec ${DOCKER_IMAGE} python /app/test_app.py"
                        } 
                            }
                    }
                }
            }
        }

        stage('Deploy to Production') {
            when {
                expression { return currentBuild.result == 'SUCCESS' }
            }
            steps {
                script {
                    // Deploy to production using the production docker-compose file
                    if (isUnix()) {
                        sh 'docker-compose -f docker-compose.prod.yml up -d'  // Linux command
                    } else {
                        bat 'docker-compose -f docker-compose.prod.yml up -d'  // Windows command
                    }
                }
            }
        }

        stage('Teardown') {
            steps {
                script {
                    // Shutdown and remove containers, networks, volumes, and orphans
                    if (isUnix()) {
                        sh 'docker-compose down --volumes --remove-orphans'  // Linux command
                    } else {
                        bat 'docker-compose down --volumes --remove-orphans'  // Windows command
                    }
                }
            }
        }
    }

    post {
        always {
            // Clean the workspace after each build
            cleanWs()
        }
    }
}
